import numpy as np
# b
array = np.zeros(10)
print(array,'\n')
# c
array_1 = np.ones(10)
print(array_1,'\n')
# d
array_5 = np.ones(10)*5
print(array_5,'\n')
# e
a=np.arange(10,51)
print(a,'\n')
# f
a=np.arange(10,51,2)
print(a,'\n')
# g Создать матрицу 3х3 с числами от 0 до 8
a = np.arange(9).reshape(3,3)
print(a,'\n')
# Создать единичную матрицу 3x3
a = np.eye(3)
print(a)

# i.Используйте NumPy для генерации случайного числа от 0 до 1
a = np.random.rand(1)
print(a)

# j.Используйте NumPy для генерации массива из 25 случайных чисел,взятых из стандартного нормального распределения
a = np.random.randn(25)
print(a)

# k.Создайте следующую матрицу используя функции библиотеки NumPy
a = np.arange(0.01,1.01, 0.01).reshape(10,10)
print(a)

# l.Дана стартовая матрица
mat = np.arange(1,26).reshape(5,5)
print(mat,'\n')
print(mat[2:5,1:5])

# m.Написать код обращения к элементу который вернет значение  20 изстартовой матрицы задачи l
mat = np.arange(1,26).reshape(5,5)
print(mat,'\n')
print(mat[3,4])

# n.Написать код к стартовой матрице задачи l
print(mat[0:3,1:2])

# o.Написать код к стартовой матрице задачи l
print(mat[4:])

# p.Написать код к стартовой матрице задачи l
print(mat[3:])

#  q.Получить сумму всех значений в стартовой матрице mat
print(np.sum(a))

# r.Получить стандартное отклонение в стартовой матрице mat
print(np.std(mat))

# s.Получить сумму значений в колонках в стартовой матрице mat
print(mat.sum(axis=0))